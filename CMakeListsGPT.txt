cmake_minimum_required(VERSION 3.5)
project(acado_exported_rti)

set(CMAKE_CXX_STANDARD 11)

set(UNAME ${CMAKE_SYSTEM_NAME})

set(LDLIBS -lm -lstdc++)
if(UNAME MATCHES "Linux")
set(LDLIBS ${LDLIBS} -lrt)
endif()

find_program(CCACHE_APP ccache)
if(CCACHE_APP)
set(CMAKE_C_COMPILER_LAUNCHER ${CCACHE_APP})
set(CMAKE_CXX_COMPILER_LAUNCHER ${CCACHE_APP})
endif()

set(CMAKE_C_FLAGS "-O3 -finline-functions -I. -I./qpoases")
set(CMAKE_CXX_FLAGS "-O3 -finline-functions -I. -I./qpoases -I./qpoases/INCLUDE -I./qpoases/SRC")

set(SRC_FILES
./qpoases/SRC/Bounds.cpp
./qpoases/SRC/Constraints.cpp
./qpoases/SRC/CyclingManager.cpp
./qpoases/SRC/Indexlist.cpp
./qpoases/SRC/MessageHandling.cpp
./qpoases/SRC/QProblem.cpp
./qpoases/SRC/QProblemB.cpp
./qpoases/SRC/SubjectTo.cpp
./qpoases/SRC/Utils.cpp
./qpoases/SRC/EXTRAS/SolutionAnalysis.cpp
acado_qpoases_interface.cpp
acado_integrator.cpp
acado_solver.cpp
acado_auxiliary_functions.cpp)

add_library(acado_exported_rti ${SRC_FILES})

target_include_directories(acado_exported_rti PUBLIC
${CMAKE_CURRENT_SOURCE_DIR}/qpoases/SRC
${CMAKE_CURRENT_SOURCE_DIR}/qpoases/INCLUDE)

target_compile_definitions(acado_exported_rti PRIVATE -D${UNAME})

add_executable(test_acado test.cpp)

target_link_libraries(test_acado PRIVATE acado_exported_rti)

set_target_properties(test_acado PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})

set_target_properties(acado_exported_rti PROPERTIES OUTPUT_NAME libacado_exported_rti)

add_custom_target(clean-all COMMAND rm -rf ${CMAKE_BINARY_DIR}/* ${CMAKE_BINARY_DIR}/../CMakeFiles ${CMAKE_BINARY_DIR}/../Makefile ${CMAKE_BINARY_DIR}/../cmake_install.cmake ${CMAKE_BINARY_DIR}/../acado_exported_rtiConfig.cmake)
