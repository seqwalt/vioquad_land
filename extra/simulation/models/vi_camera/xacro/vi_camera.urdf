<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from vi_camera.urdf.xacro           | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="vi_camera">
  <!-- Macro to add RotorS IMU. -->
  <!--
  <xacro:macro name="imu_plugin_macro"
    params="namespace parent_link imu_topic
      mass_imu_sensor gyroscope_noise_density gyroscope_random_walk
      gyroscope_bias_correlation_time gyroscope_turn_on_bias_sigma
      accelerometer_noise_density accelerometer_random_walk
      accelerometer_bias_correlation_time accelerometer_turn_on_bias_sigma
      *inertia *origin">
    <link name="${namespace}/imu_link">
      <inertial>
        <xacro:insert_block name="inertia" />
        <mass value="${mass_imu_sensor}" />
        <origin xyz="0 0 0" rpy="0 0 0" />
      </inertial>
    </link>
    <joint name="${namespace}/imu_joint" type="revolute">
      <xacro:insert_block name="origin" />
      <parent link="${parent_link}" />
      <child link="${namespace}/imu_link" />
      <limit upper="0" lower="0" effort="0" velocity="0" />
    </joint>
    <gazebo>
      <sensor>
        <plugin filename="librotors_gazebo_imu_plugin.so" name="rotors_gazebo_imu_plugin">
          <robotNamespace>${namespace}</robotNamespace>
          <linkName>${namespace}/imu_link</linkName>
          <imuTopic>${imu_topic}</imuTopic>
          <gyroscopeNoiseDensity>${gyroscope_noise_density}</gyroscopeNoiseDensity>
          <gyroscopeRandomWalk>${gyroscope_random_walk}</gyroscopeRandomWalk>
          <gyroscopeBiasCorrelationTime>${gyroscope_bias_correlation_time}</gyroscopeBiasCorrelationTime>
          <gyroscopeTurnOnBiasSigma>${gyroscope_turn_on_bias_sigma}</gyroscopeTurnOnBiasSigma>
          <accelerometerNoiseDensity>${accelerometer_noise_density}</accelerometerNoiseDensity>
          <accelerometerRandomWalk>${accelerometer_random_walk}</accelerometerRandomWalk>
          <accelerometerBiasCorrelationTime>${accelerometer_bias_correlation_time}</accelerometerBiasCorrelationTime>
          <accelerometerTurnOnBiasSigma>${accelerometer_turn_on_bias_sigma}</accelerometerTurnOnBiasSigma>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>
  -->
  <link name="link"/>
  <!-- Vi Sensor Link -->
  <link name="vi_sensor/vi_sensor_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.03 0.133 0.057"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://vi_camera/meshes/vi_camera.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <inertial>
      <!--<mass value="0.13" />!-->
      <!-- original !-->
      <mass value="1e-16"/>
      <!-- added by SW !-->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <joint name="vi_sensor/vi_sensor_joint" type="fixed">
    <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
    <parent link="link"/>
    <child link="vi_sensor/vi_sensor_link"/>
  </joint>
  <link name="vi_sensor/camera_left_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.01" radius="0.007"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.01" radius="0.007"/>
      </geometry>
      <material name="red"/>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <joint name="vi_sensor/camera_left_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.015 0.055 0.0065"/>
    <parent link="vi_sensor/vi_sensor_link"/>
    <child link="vi_sensor/camera_left_link"/>
  </joint>
  <link name="vi_sensor/camera_right_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.01" radius="0.007"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.01" radius="0.007"/>
      </geometry>
      <material name="red"/>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <joint name="vi_sensor/camera_right_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.015 -0.055 0.0065"/>
    <parent link="vi_sensor/vi_sensor_link"/>
    <child link="vi_sensor/camera_right_link"/>
  </joint>
  <link name="vi_sensor/camera_left_optical_link"/>
  <joint name="vi_sensor/camera_left_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="vi_sensor/camera_left_link"/>
    <child link="vi_sensor/camera_left_optical_link"/>
  </joint>
  <!-- Both cameras in the pair are anchored off the left camera frame. -->
  <gazebo reference="vi_sensor/camera_left_link">
    <sensor name="vi_sensor_stereo_camera" type="multicamera">
      <update_rate>30.0</update_rate>
      <camera name="left">
        <pose>0 0 0 0 0 0</pose>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>752</width>
          <height>480</height>
          <format>L8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>30.0</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
             That pixel's noise value is added to each of its color
             channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <camera name="right">
        <pose>0 -0.11 0 0 0 0</pose>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>752</width>
          <height>480</height>
          <format>L8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>30.0</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
             That pixel's noise value is added to each of its color
             channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <!-- Stereo controller, setting the transforms between the two cameras. -->
      <plugin filename="libgazebo_ros_multicamera.so" name="vi_sensor_stereo_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>vi_sensor</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>vi_sensor/camera_left_link</frameName>
        <hackBaseline>0.11</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <link name="vi_sensor/camera_depth_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.01" radius="0.007"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <joint name="vi_sensor/camera_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.015 0.055 0.0065"/>
    <parent link="vi_sensor/vi_sensor_link"/>
    <child link="vi_sensor/camera_depth_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <!-- Optical center of camera -->
  <link name="vi_sensor/camera_depth_optical_center_link"/>
  <joint name="vi_sensor/camera_depth_optical_center_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="vi_sensor/camera_depth_link"/>
    <child link="vi_sensor/camera_depth_optical_center_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <gazebo reference="vi_sensor/camera_depth_link">
    <sensor name="vi_sensor_camera_depth" type="depth">
      <always_on>true</always_on>
      <update_rate>30.0</update_rate>
      <camera>
        <horizontal_fov>2</horizontal_fov>
        <image>
          <format>L8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.01</near>
          <far>10.0</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="vi_sensor_camera_depth">
        <robotNamespace>vi_sensor</robotNamespace>
        <alwaysOn>true</alwaysOn>
        <baseline>0.11</baseline>
        <updateRate>30.0</updateRate>
        <cameraName>camera_depth</cameraName>
        <imageTopicName>camera/image_raw</imageTopicName>
        <cameraInfoTopicName>camera/camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/disparity</depthImageTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <frameName>camera_depth_optical_center_link</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>10.0</pointCloudCutoffMax>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <!--
    <xacro:imu_plugin_macro
      namespace="${namespace}"
      parent_link="${namespace}/vi_sensor_link"
      imu_topic="imu"
      mass_imu_sensor="0.015"
      gyroscope_noise_density="0.0003394"
      gyroscope_random_walk="0.000038785"
      gyroscope_bias_correlation_time="1000.0"
      gyroscope_turn_on_bias_sigma="0.0087"
      accelerometer_noise_density="0.004"
      accelerometer_random_walk="0.006"
      accelerometer_bias_correlation_time="300.0"
      accelerometer_turn_on_bias_sigma="0.1960">
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />
      <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:imu_plugin_macro>
    -->
  <link name="vi_sensor/imu_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="0.015"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <joint name="vi_sensor/imu_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0.0 0 0.0"/>
    <parent link="vi_sensor/vi_sensor_link"/>
    <child link="vi_sensor/imu_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <gazebo reference="vi_sensor/imu_link">
    <gravity>true</gravity>
    <sensor name="vi_sensor_imu" type="imu">
      <always_on>true</always_on>
      <update_rate>100.0</update_rate>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="vi_sensor_imu_controller">
        <robotNamespace>vi_sensor</robotNamespace>
        <topicName>imu</topicName>
        <frameName>imu_link</frameName>
        <updateRateHZ>100.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <initialOrientationAsReference>false</initialOrientationAsReference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>
</robot>

