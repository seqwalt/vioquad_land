<?xml version="1.0" ?>
<sdf version="1.5">
  <model name="monocular_camera">
    <pose>0 0 0.035 0 0 0</pose>
    <link name="link">
      <inertial>
        <pose>0.01 0.025 0.025 0 0 0</pose>
        <mass>1e-16</mass>
        <inertia>
          <ixx>1e-16</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>1e-16</iyy>
          <iyz>0</iyz>
          <izz>1e-16</izz>
        </inertia>
      </inertial>
      <visual name="visual">
        <pose>0 0 0 0 1.57 0</pose>
        <geometry>
          <mesh>
            <uri>model://monocular_camera/meshes/hokuyo.dae</uri>
          </mesh>
        </geometry>
      </visual>
      <sensor name="camera" type="wideanglecamera">
        <update_rate>30.0</update_rate>
        <camera>
          <horizontal_fov>1.58</horizontal_fov>
          <image>
            <width>820</width>
            <height>820</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.04</near>
            <far>100</far>
          </clip>
          <lens>
            <!-- type element is mandatory -->
            <type>custom</type>

            <!-- manually defined mapping function r = c1*f*fun(theta/c2 + c3) -->
            <!-- More information here: https://en.wikipedia.org/wiki/Fisheye_lens#Mapping_function -->
            <custom_function>
              <c1>2.0</c1>   <!-- linear scaling -->
              <c2>2.0</c2>      <!-- angle scaling -->
              <c3>0.0</c3>      <!-- angle offset -->
              <f>1.0</f>      <!-- one more scaling parameter -->
              <fun>tan</fun>  <!-- one of sin,tan,id -->
            </custom_function>

            <!-- if it is set to `true` your horizontal FOV will ramain as defined -->
            <!-- othervise it depends on lens type and custom function, if there is one -->
            <scale_to_hfov>true</scale_to_hfov>
            <!-- clip everything that is outside of this angle -->
            <cutoff_angle>1.58</cutoff_angle>
            <!-- resolution of the cubemap texture, the highter it is - the sharper is your image -->
            <env_texture_size>512</env_texture_size>
          </lens>
          <always_on>1</always_on>
        </camera>
        <plugin name="camera_plugin" filename="libgazebo_ros_camera.so">
          <update_rate>30.0</update_rate>
          <cameraName>monocular_camera</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_link</frameName>
          <hackBaseline>0.00</hackBaseline>
          <distortionK1>-0.1</distortionK1>
          <distortionK2>0.0057</distortionK2>
          <distortionK3>-0.00011</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </link>
  </model>
</sdf>
